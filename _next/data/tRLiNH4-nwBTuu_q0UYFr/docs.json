{"pageProps":{"name":"num","content":"# Num\n`Num` is the main way of interacting with DecimalSystem. It wraps around a number (or numeric string) and provides features to convert to different bases. For example, to convert a number to base 16, you can do:\n```javascript\nnew Num(82).toBase(16).toString();\n```\n\n##### \n\n## Constructor\n```javascript\nnew Num(options)\n```\nCreate a new `Num` instance to do base conversions.\n#### \n| Name | Description | Value | Example |\n| :--- | :--- | :--- | :--- |\n| options | The options for the num. This includes the number being wrapped, as well as information about it (such as its base). | [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)/[Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) or [NumOptions](/docs/numoptions) | 26 |\n\n#### \n\n## toBase\n```javascript\nnum.toBase(base)\n```\nConvert a `Num` to another base. Note that base conversions are only done in `toString`; this method simply sets the base that the `Num` will be converted to.\n| Name | Description | Value |\n| :--- | :--- | :--- |\n| base | The base that the `Num` will be converted to. | [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) (greater than 1) | 16 |\n\n#### \n\n## toString\n```javascript\nnum.toString(precision?)\n```\nTurn a `Num` into a string. This may or may not be a valid [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number), depending on the base used.\n| Name | Description | Value |\n| :--- | :--- | :--- |\n| precision? | The maximum amount of decimal digits that will appear in the number. For example, if the default (8) is used, a number will always have 8 or fewer decimals. | [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) (greater than 1) | 8 |","data":{}},"__N_SSG":true}